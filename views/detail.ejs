<html lang="en"><head>
    <meta charset="UTF-8">
    <title>Login</title>

    <!--    BootStrap Library-->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>

    <!-- Font Awesome CSS -->
    <link href="//maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet">

    <!--    JQuery-->
    <script src="https://code.jquery.com/jquery-3.5.1.js"></script>

    <!--    Javascript-->
    <!-- <script src="/htmlApi.js"></script> -->

    <!--    Include CSS -->
    <!-- <link href="/meStyleSheet.css" rel="stylesheet"> -->

<style>

</style>
<script>
  //로그인 여부 확인
    function loginCheck() {
        if (!localStorage.getItem("token")) {
            alert("로그인이 필요한 기능입니다.")
            location.href = "/login"
        }
    }
    $(document).ready(function () {
        // 비회원, 회원 전부 볼 수 있어야하기 때문에 에러가 발생하지 않아야한다.
        if (localStorage.getItem("token")) {
            getSelf(function (user) {
                userId = user.userId;
                $(`#btnModify${userId}`).show()
            })
        }
        $('#submitbtn').show();
        $('#commentmodifybtn').hide();
        getComments()
    });

    // 해당 게시글의 모든 Comments를 조회
    // function getComments() {
    //     //URL의 Depth가 바뀐다면 split Array 인자도 수정해야한다.
    //     const postId = location.pathname.split("/")[3]
    //     const token = localStorage.getItem("token");
    //     $('#comment_body').empty();

    //     $.ajax({
    //         type: "GET",
    //         url: `/api/comments/${postId}`,
    //         // headers: { authorization: `Bearer ${localStorage.getItem("token")}` },
    //         headers: {
    //             authorization: `Bearer ${token}`,
    //         },
    //         data: {token},
    //         success: function (response) {
    //             const comments = response['comments'];
    //             const tokenUserId = response['userId']; //response['userId']가 존재하지 않을 경우 undefined를 설정

    //             for (const commentObject of comments) {
    //                 makeComment(commentObject, tokenUserId)
    //             }
    //         },
    //         error: function (error) {
    //             console.error(error.responseJSON.errorMessage);
    //         },
    //     });
    // }
    // function getComments() {
    //     const postId = location.pathname.split("/")[3]
    //     const token = localStorage.getItem("token");
    //     $('#postComment').empty();

    //     $.ajax({
    //       type: 'GET',
    //       url: `/api/comments/${postId}`,
    //       data: {},
    //       headers: {
    //         authorization: `Bearer ${localStorage.getItem('token')}`,
    //       },
    //       success: function (comments) {
    //         let resComment = comments.comment;
    //         for (let i = 0; i < resComment.length; i++) {
    //           const comment = resComment[i];
    //           if (response.nickname === comment.nickname) {
    //             make_comment_list(comment, true);
    //           } else {
    //             make_comment_list(comment, false);
    //           }
    //         }
    //       },
    //     });
    //   }
    function getComments() {
        const postId = location.pathname.split("/")[3]
        const token = localStorage.getItem("token");
        
        $('#postComment').empty();

        $.ajax({
          type: "GET",
          url: `/api/comments/${postId}`,
          headers: { authorization: `Bearer ${localStorage.getItem("token")}`,},
          data: {},
          success: function(response) {
            const comments = response['comments']
            for (let i = comments.length - 1; i >= 0; i --) {
              makeComments(comments[i]);
            }
          }
        })
      }
      // 저장된 댓글을 html에 구현하기
      function makeComments(comment) {
        
        const comId = comment.comId;
        const name = comment.name;
        const com = comment.comment;
        const user1 = comment.name
        console.log(comId)

        let temp_html;
        if (user1 == localStorage.getItem('nickname')) {
          temp_html = `
            <li>
              <div id="commentHide${comId}" style="display: inline-block;" >${name} 님이 "${com}"</div>
              <div id="commentShow${comId}" style="display: none; inline-block;" >
                ${name} 님이 <input id="modifyInput${comId}"type="text" value="${com}">
                <button onclick="modifyComment('${comId}')">수정</button>
                <button onclick="cancel()">취소</button>
              </div>
              <div id="buttons${comId}" style="display: inline-block;">
              <button id="comment('${comId}')" onclick="findComment('${comId}')">modify!</button>             
              <button onclick="deleteComment('${comId}')">delete</button>
              </div>
            </li>`;
        } else {
          temp_html = `
            <li>
              ${name} 님이 "${com}"
            </li>`;
        }

        $('#comments').append(temp_html);
      }



    

      //댓글 특정
      function findComment(comId) {
        $.ajax({
          type: "GET",
          url: `/api/findComment/${comId}`,
          headers: {
                    authorization: `Bearer ${localStorage.getItem("token")}`
                },
          data: {},
          success: function(response) {
            
            if (response['errorMessage']) {
              alert(response['errorMessage']);
              return;
            }

      

            const comment = response['comments'];
            console.log(comment)

            $(`#commentHide${comId}`).hide();
            $(`#commentShow${comId}`).show();
            $(`#buttons${comId}`).hide();
            $('#commentid_p').text(comId);
            console.log('특정성공')
          }
        })
        
      }

      //댓글 수정 취소
      function cancel(){
        window.location.reload();
      }

    //댓글 수정
    function modifyComment(comId) {
        const comment = $(`#modifyInput${comId}`).val()
        console.log(comment + '2')
        if (!comment) {
            alert("댓글 내용이 존재하지 않습니다.")
            return;
        }

        $.ajax({
            type: "PATCH",
            url: `/api/patchComment/${comId}`,
            headers: {
                authorization: `Bearer ${localStorage.getItem('token')}`,
            },
            data: {comment},
            success: function (response) {
                console.log(response);
            },
            error: function (error) {
                console.error(error.responseJSON.errorMessage);
            },
        });
        window.location.reload();
    }

    // 댓글 삭제
    function deleteComment(comId) {
      console.log(comId + '!')
        if (confirm("댓글을 삭제하시겠습니까?")) {
            $.ajax({
                type: "DELETE",
                url: `/api/comments/${comId}`,
                headers: {
                    authorization: `Bearer ${localStorage.getItem('token')}`
                },
                data: {},
                success: function(response) {
                    if (response['errorMessage']) {
                        alert(response['errorMessage']);
              }
              window.location.reload();
            }
          })
        }
      }

      //댓글 입력
    function writeComment() {
        const comment = $('#commentinput').val()
        const postId = location.pathname.split("/")[3]


        if (!comment) {
            alert("댓글 내용을 입력 해주세요.")
            return;
        }
        $.ajax({
            type: "POST",
            url: `/api/comments/${postId}`,
            headers: {
                authorization: `Bearer ${localStorage.getItem('token')}`,
            },
            data: {comment},
            success: function (response) { //새로고침
                location.href = location.href
                history.go(0);
            },
            error: function (error) {
                alert(error.responseJSON.errorMessage)
            },
        });
    }


    function getSelf(callback) {
    $.ajax({
        type: "GET",
        url: "/api/users/me",
        headers: {
        authorization: `Bearer ${localStorage.getItem("token")}`,
        },
        success: function (response) {
        callback(response.user);
        },
        error: function (xhr, status, error) {
        if (status == 401) {
            alert("로그인이 필요합니다.");
        } else {
            localStorage.clear();
            alert("알 수 없는 문제가 발생했습니다. 관리자에게 문의하세요.");
        }
        window.location.href = "/";
        },
    });
    }
</script></head>


<body>

<div>
    <div class="content-box">
      <h1 style="display: none;">Detail with post no <%= data.postId %> </h1>
      <h3>제목 :  <%= data.title %> </h3>
        <div class="content-info">
            <h6>작성일 :  <%= data.date.split('GMT',1) %> </h6>
            <h6>작성자 : <%= data.name %></h6>

            <button type="button" onclick="location.href='/'">뒤로</button>
            
        </div>
      <hr>
       <p>본문 : <%= data.content %></p>   
    </div>

    <hr>

    <div>
      <h3>
        comments
      </h3>
    <div id="comments">
    </div>
      <div id="makecomment">
        <br>
        <div onclick="loginCheck()" style="display: inline-block;">comment: <input type="text" id="commentinput" > </div>
        <button id="submitbtn" onclick="writeComment()" style="display: inline-block;">Submit</button> 
      </div>
    </div>
</div>
</body>
</html>